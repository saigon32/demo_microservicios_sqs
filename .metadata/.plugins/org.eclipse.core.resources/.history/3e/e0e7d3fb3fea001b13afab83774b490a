trigger:
- master
- staging
- develop

variables:
  NAME: 'siesa-integration-api'
  IMAGE_NAME: 'dislicores/$(NAME)'
  VERSION: '0.0.1'
  REGISTRY_URL: '335627127936.dkr.ecr.us-east-1.amazonaws.com/'
  IMAGE_TAG: '$(REGISTRY_URL)$(IMAGE_NAME):$(VERSION)-SNAPSHOT'
  FILE_PATTERN: 'build/libs/*.jar'

pool:
  name: aws_dev_eks_bastion

stages:
- stage: Build_Dev
  displayName: 'Build Dev'
  condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'refs/heads/develop'))

  jobs:
  - job: Build
    container: 'gradle:jdk16'

    steps:

    - script: gradle clean build -x test
      displayName: 'Build'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: 'build/libs/'
        ArtifactName: '$(NAME)'

- stage: Build_Image
  displayName: 'Build Docker Image'
  jobs:
  - job: Build_Image
    steps:
    - checkout: none
    - script: echo $(IMAGE_NAME)
      displayName: 'Image Name'
    - script: echo $(IMAGE_TAG)
      displayName: 'Image Tag'
    - task: Docker@2
      displayName: 'Build an image'
      inputs:
        repository: $(IMAGE_NAME)
        command: build
        tags: latest

- stage: Upload_Artifacts_ECR
  displayName: 'Upload Image ECR'
  jobs:
  - job: Upload_Artifacts_ECR
    steps:
    - checkout: none
    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'aws_orion_dev'
        regionName: 'us-east-1'
        imageSource: 'imagename'
        sourceImageName: '$(IMAGE_NAME)'
        repositoryName: '$(IMAGE_NAME)'
        pushTag: '0.0.1-SNAPSHOT'
        autoCreateRepository: false

- stage: Deploy_stage
  displayName: 'Deploy EKS'
  jobs:
  - job: Deploy_EKS
    steps:
    - checkout: none
    - script: |
        sudo kubectl apply -f k8s/deployment-dev.yaml
        sudo kubectl --namespace develop rollout restart deployments/$(NAME)
      displayName: 'Deploy EKS'
